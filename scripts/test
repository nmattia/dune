#!/usr/bin/env bash

set -euo pipefail

ROOT="$(dirname "${BASH_SOURCE[0]:-$0}")/.."

TESTDIR=$(mktemp -d)

OUTLINK="$(mktemp -d)/link"
echo "OUTLINK: $OUTLINK"

function log() {
    1>&2 echo "$@"
}

function run() {
    log -n "running $@"
    rc=0
    "$@" || rc=$?
    log " (rc: $rc)"
    return "$rc"
}

# test that executables can be wrapped (even those in /bin)
run nix build -f "$ROOT/sandbox.nix" sandboxExes \
    --argstr user "$USER" \
    --argstr path "$TESTDIR" \
    --arg paths '[ /bin ]' \
    --arg env '[]' \
    --out-link "$OUTLINK"

# Run ls from inside sandbox and assert HOME cannot be accessed
OUTPUT=$(mktemp)
rc=0
run bash -c "cd $TESTDIR && export PATH=$OUTLINK/bin:\$PATH && ls $HOME" 2> "$OUTPUT" || rc=$?
if [ "$rc" != "1" ]
then
    log "expecting error from ls, but got return code $rc"
    exit 1
fi

if ! grep "Operation not permitted" "$OUTPUT" >/dev/null
then
    log "expecting Operation not permitted error"
    exit 1
fi

run rm "$OUTPUT"
run rmdir "$TESTDIR"
run rm "$OUTLINK"
run rmdir "$(dirname "$OUTLINK")"
